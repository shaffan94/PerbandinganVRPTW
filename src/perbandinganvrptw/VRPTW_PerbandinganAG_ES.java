/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package perbandinganvrptw;

import Kontroller.DatabaseManager;
import Model.DataHasilAG;
import Model.DataHasilES;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class VRPTW_PerbandinganAG_ES extends javax.swing.JFrame {

    /**
     * Creates new form VRPTW_PerbandinganAG_ES
     */
    public VRPTW_PerbandinganAG_ES() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelPerbandingan = new javax.swing.JTable();
        Tampil_Banding = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Perbandingan VRPTW menggunakan AG dan ES", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(204, 204, 255))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        TabelPerbandingan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Perbandingan", "Algoritma Genetika", "Evoution Straategies"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TabelPerbandingan.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(TabelPerbandingan);

        Tampil_Banding.setText("Tampilkan Perbandingan");
        Tampil_Banding.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Tampil_BandingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Tampil_Banding)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 851, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Tampil_Banding)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Tampil_BandingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Tampil_BandingActionPerformed
        // TODO add your handling code here:
        int i,n;
        DataHasilAG modelDataHasilAG;
        DataHasilES modelDataHasilES;
        DatabaseManager dbManager = new DatabaseManager();
        String sqlAG, sqlES;
        
        dbManager.set_KoneksiDatabase();
        sqlAG = "select *from data_genetika";
        modelDataHasilAG = dbManager.get_selectDataAG(sqlAG);
        
        sqlES = "select *from data_es";
        modelDataHasilES = dbManager.get_selectDataES(sqlES);
        
        DefaultTableModel data_Perbandingan = (DefaultTableModel) TabelPerbandingan.getModel();
        for(i=TabelPerbandingan.getRowCount()-1; i>=0; i--){
            data_Perbandingan.removeRow(i);
        }
        
        String[] row = new String[4];

        n=1;
        DefaultTableModel info_Perbandingan = (DefaultTableModel) TabelPerbandingan.getModel();
        for(i=1; i<10; i++){
            switch (i) {
                case 1:
                    row[0] = String.valueOf(n);
                    row[1] = "Jumlah lokasi kunjungan";
                    row[2] = String.valueOf(modelDataHasilAG.get_jumlahLokasiKunjungan());
                    row[3] = String.valueOf(modelDataHasilES.get_jumlahLokasiKunjungan());
                    
                    break;
                case 2:
                    row[0] = String.valueOf(n);
                    row[1] = "Jumlah populasi";
                    row[2] = String.valueOf(modelDataHasilAG.get_jumlahPopulasi());
                    row[3] = String.valueOf(modelDataHasilES.get_jumlahPopulasi());
                    
                    break;
                case 3:
                    row[0] = String.valueOf(n);
                    row[1] = "Jumlah generasi";
                    row[2] = String.valueOf(modelDataHasilAG.get_jumlahGenerasi());
                    row[3] = String.valueOf(modelDataHasilES.get_jumlahGenerasi());
                    
                    break;
                case 4:
                    row[0] = String.valueOf(n);
                    row[1] = "Probabilitas crossOver";
                    row[2] = String.valueOf(modelDataHasilAG.get_probabilitasCrossover());
                    row[3] = "-";
                    
                    break;
                case 5:
                    row[0] = String.valueOf(n);
                    row[1] = "Probabilitas mutasi";
                    row[2] = String.valueOf(modelDataHasilAG.get_probabilitasMutasi());
                    row[3] = String.valueOf(modelDataHasilES.get_probabilitasMutasi());
                    
                    break;
                case 6:
                    row[0] = String.valueOf(n);
                    row[1] = "Laju kendaraan";
                    row[2] = String.valueOf(modelDataHasilAG.get_lajuKendaraan());
                    row[3] = String.valueOf(modelDataHasilES.get_lajuKendaraan());
                    
                    break;
                case 7:
                    row[0] = String.valueOf(n);
                    row[1] = "Kapasitas angkutan";
                    row[2] = String.valueOf(modelDataHasilAG.get_kapasitasAngkutan());
                    row[3] = String.valueOf(modelDataHasilES.get_kapasitasAngkutan());
                    
                    break;
                case 8:
                    
                    row[0] = String.valueOf(n);
                    row[1] = "Nilai fitness";
                    row[2] = String.valueOf(modelDataHasilAG.get_nilaiFitness());
                    row[3] = String.valueOf(modelDataHasilES.get_nilaiFitness());
                    break;
                case 9:
                    row[0] = String.valueOf(n);
                    row[1] = "Waktu komputasi";
                    row[2] = String.valueOf(modelDataHasilAG.get_waktuKomputasi());
                    row[3] = String.valueOf(modelDataHasilES.get_waktuKomputasi());
                    
                    break;
                default:
                    break;
            }

            info_Perbandingan.addRow(row);
            n = n+1;
        }
    }//GEN-LAST:event_Tampil_BandingActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VRPTW_PerbandinganAG_ES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VRPTW_PerbandinganAG_ES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VRPTW_PerbandinganAG_ES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VRPTW_PerbandinganAG_ES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VRPTW_PerbandinganAG_ES().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TabelPerbandingan;
    private javax.swing.JButton Tampil_Banding;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
