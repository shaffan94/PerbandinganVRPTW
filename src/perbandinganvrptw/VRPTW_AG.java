/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package perbandinganvrptw;

import Model.KromosomPopulasi;
import Model.DataTujuan;
import Kontroller.Genetika;
import Kontroller.DokumenManager;
import java.io.File;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class VRPTW_AG extends javax.swing.JFrame {

    /**
     * Creates new form VRPTW_AG
     */
    
    private final int[][] dataPelangganNumber = new int[34][7];
    private final String[][] dataNamaPelanggan = new String[34][2];
    private final int[][] dataJarakNumber = new int[35][35];
    
    public VRPTW_AG() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        ukuranPopulasi = new javax.swing.JTextField();
        crossOver = new javax.swing.JTextField();
        Mutasi = new javax.swing.JTextField();
        Generasi = new javax.swing.JTextField();
        kapasitasAngkut = new javax.swing.JTextField();
        kecKendaraan = new javax.swing.JTextField();
        Load_Data = new javax.swing.JButton();
        do_AG = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelFitnessSeluruh = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        FitnessLama = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        FitnessBaru = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        DataTujuan = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        Individu_AG = new javax.swing.JLabel();
        fitness_AG = new javax.swing.JLabel();
        terlewati_AG = new javax.swing.JLabel();
        kendaraan_AG = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        tampil_kromosom = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        ExecutionTime = new javax.swing.JLabel();
        Bersih_Data = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Input Parameter"));

        jLabel2.setText("Ukuran Populasi");

        jLabel3.setText("Probabilitas Crossover");

        jLabel4.setText("Probabilitas Mutasi");

        jLabel5.setText("Jumlah Generasi");

        jLabel6.setText("Kecepatan Kendaraan");

        jLabel7.setText("Kapasitas Angkut");

        ukuranPopulasi.setText("0");

        crossOver.setText("0");

        Mutasi.setText("0");

        Generasi.setText("0");

        kapasitasAngkut.setText("0");

        kecKendaraan.setText("0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ukuranPopulasi, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(crossOver, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Mutasi, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(kecKendaraan, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Generasi, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(kapasitasAngkut, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ukuranPopulasi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(crossOver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(Mutasi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(Generasi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(kapasitasAngkut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(kecKendaraan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(85, Short.MAX_VALUE))
        );

        Load_Data.setText("Load FIle");
        Load_Data.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Load_DataActionPerformed(evt);
            }
        });

        do_AG.setText("Proses Algoritma Genetika");
        do_AG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                do_AGActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Proses Algoritma Genetika");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 255, 255)));

        TabelFitnessSeluruh.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Individu", "Kromosom", "Jumlah Kendaraan ", "Terlewati", "Fitness"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TabelFitnessSeluruh);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 974, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Hasi Fitness Keseluruhan", jPanel2);

        jPanel4.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 255, 255)));

        FitnessLama.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Individu", "Kromosom", "Jumlah Kendaraan ", "Terlewati", "Fitness"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(FitnessLama);

        FitnessBaru.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Individu", "Kromosom", "Jumlah Kendaraan ", "Terlewati", "Fitness"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(FitnessBaru);

        jLabel13.setText("Hasil Fitness Populasi Lama");

        jLabel14.setText("Hasil Fitness Populasi Baru");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 974, Short.MAX_VALUE)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel13)
                .addGap(4, 4, 4)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Hasil Fitness Populasi Awal dan Baru", jPanel4);

        jPanel3.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 255, 255)));

        DataTujuan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Individu", "Kendaraan ", "Kromosom", "Rute", "Waktu", "Sampai", "Buka", "Tunggu", "Mulai", "Layanan", "Selesai", "Tutup", "Penalti"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(DataTujuan);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 974, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Data Tujuan Kendaraan", jPanel3);

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Hasil Kromosom Terbaik"));
        jPanel5.setName(""); // NOI18N

        Individu_AG.setText("Individu ");

        fitness_AG.setText("Fitness");

        terlewati_AG.setText("Terlewati");

        kendaraan_AG.setText("Banyak kendaraan");

        tampil_kromosom.setText("Banyak Kromosom");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tampil_kromosom)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tampil_kromosom)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(terlewati_AG)
                            .addComponent(kendaraan_AG)
                            .addComponent(Individu_AG)
                            .addComponent(fitness_AG))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Individu_AG)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(fitness_AG)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(terlewati_AG)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(kendaraan_AG)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ExecutionTime.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ExecutionTime.setText("Execution Time :");

        Bersih_Data.setText("Bersihkan Data");
        Bersih_Data.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bersih_DataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ExecutionTime, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Load_Data, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                            .addComponent(do_AG, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                            .addComponent(Bersih_Data, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(10, 10, 10)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTabbedPane1))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(ExecutionTime, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(Load_Data, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(do_AG, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Bersih_Data, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addComponent(jSeparator1)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Load_DataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Load_DataActionPerformed
        // TODO add your handling code here:
        ArrayList<ArrayList> data;
        
        ukuranPopulasi.setText(String.valueOf(5));
        crossOver.setText(String.valueOf(0.4));
        Mutasi.setText(String.valueOf(0.4));
        Generasi.setText(String.valueOf(100));
        kapasitasAngkut.setText(String.valueOf(1680));
        kecKendaraan.setText(String.valueOf(30));        
        
        DokumenManager dokManager = new DokumenManager();
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(this);
        
        if(result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            System.out.println("Selected file : " + selectedFile.getAbsolutePath());
            String nama_file = selectedFile.getName();
            
            if(nama_file.lastIndexOf(".") != -1 && nama_file.lastIndexOf(".") != 0 && nama_file.substring(nama_file.lastIndexOf(".")+1).equals("xlsx")){
                String FILE_NAME = selectedFile.getAbsolutePath();
                data = dokManager.get_data(FILE_NAME);

                //System.out.println(data.size());

                if(selectedFile.getName().equals("datapelanggan.xlsx")){
                    for(int i=0; i<34; i++){
                        for(int j=0; j<9; j++){
                            if(j < 7){
                                dataPelangganNumber[i][j] = Integer.valueOf(data.get(i+1).get(j).toString());
                            }
                            else{
                                dataNamaPelanggan[i][j-7] = data.get(i+1).get(j).toString();
                            }
                            //System.out.println(dataPelanggan[i][j]);
                        }
                        //System.out.println();
                    }
                    JOptionPane.showMessageDialog(null, "datapelanggan.xlsx berhasil diload");
                }
                else if(selectedFile.getName().equals("datajarak.xlsx")){
                    for(int i=0; i<35; i++){
                        for(int j=0; j<35; j++){
                            dataJarakNumber[i][j] = Integer.valueOf(data.get(i+1).get(j+1).toString());
                            //System.out.println("Data ke-" + i + ": " + dataJarak[i][j]);
                        }
                        //System.out.println();
                    }
                    JOptionPane.showMessageDialog(null, "datajarak.xlsx berhasil diload");
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "file yang anda pilih bukan file excel");
            }
            
        }
    }//GEN-LAST:event_Load_DataActionPerformed

    private void do_AGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_do_AGActionPerformed
        // TODO add your handling code here:
        long startTime = System.nanoTime();  
        
        int i,j,k,l;
        KromosomPopulasi kp, kp_all;
        DataTujuan dataTujuan;
        ArrayList<ArrayList> dataPopulasiTujuanKendaraan;
        ArrayList<KromosomPopulasi> kpListLama, kpListBaru;
        
        int generasi = Integer.parseInt(Generasi.getText());
        int populasi = Integer.parseInt(ukuranPopulasi.getText());
        double CrossOver = Double.parseDouble(crossOver.getText());
        double mutasi = Double.parseDouble(Mutasi.getText());
        int kapasitas = Integer.parseInt(kapasitasAngkut.getText());
        int kecepatan = Integer.parseInt(kecKendaraan.getText());
        
        if(Math.ceil(CrossOver) == Math.floor(CrossOver) || Math.ceil(mutasi) == Math.floor(mutasi)){
            JOptionPane.showMessageDialog(null, "Proses perhitungan gagal, nilai probabilitas crossover dan mutasi tidak boleh berupa integer");
        }
        else{
            Genetika gen = new Genetika();
            gen.setUkuranPopulasi(populasi);
            gen.setProbCrossover(CrossOver);
            gen.setProbMutation(mutasi);
            gen.setKecepatan(kecepatan); 
            gen.setKapasitasAngkut(kapasitas);
            gen.setGenerasi(generasi);

            gen.insialisasiData(dataPelangganNumber, dataJarakNumber);
            gen.populasiAwal();
            gen.pembagianKendaraan();
            gen.rute_kendaraan();
            gen.hitungFitness();

            for(i=0; i<generasi; i++){
                if(i == generasi-1){
                    gen.setkromosomPopulasiLama();
                    gen.doCrossOver();
                    gen.doMutasi();
                    gen.pembagianKendaraan();
                    gen.rute_kendaraan();
                    gen.hitungFitness();
                    gen.setKromosomTerbaik();

                    kpListLama = gen.getKromosomListLama();
                    kpListBaru = gen.getKromosomListBaru();
                    dataPopulasiTujuanKendaraan = gen.getDataTujuan();

                    String[] row = new String[5];

                    DefaultTableModel Fitness_Seluruh = (DefaultTableModel) TabelFitnessSeluruh.getModel();
                    for(j=0; j<kpListBaru.size(); j++){
                        kp_all = kpListBaru.get(j);
                        kp_all.setKromosomString();
                        
                        row[0] = String.valueOf(kp_all.getIndividu()+1);
                        row[1] = kp_all.getkromosomString();
                        row[2] = String.valueOf(kp_all.getjumlahKendaraan());
                        row[3] = String.valueOf(kp_all.getjumlahTerlewati());
                        row[4] = String.valueOf(kp_all.getFitness());

                        Fitness_Seluruh.addRow(row);
                    }

                    row = new String[5];
                    DefaultTableModel Fitness_Lama_Model = (DefaultTableModel) FitnessLama.getModel();
                    for(j=0; j<kpListLama.size(); j++){
                        kp_all = kpListLama.get(j);
                        kp_all.setKromosomString();
                        
                        row[0] = String.valueOf(kp_all.getIndividu()+1);
                        row[1] = kp_all.getkromosomString();
                        row[2] = String.valueOf(kp_all.getjumlahKendaraan());
                        row[3] = String.valueOf(kp_all.getjumlahTerlewati());
                        row[4] = String.valueOf(kp_all.getFitness());

                        Fitness_Lama_Model.addRow(row);
                    }

                    row = new String[5];
                    DefaultTableModel Fitness_Baru_Model = (DefaultTableModel) FitnessBaru.getModel();
                    for(j=0; j<kpListBaru.size(); j++){
                        kp_all = kpListBaru.get(j);
                        kp_all.setKromosomString();
                        
                        row[0] = String.valueOf(kp_all.getIndividu()+1);
                        row[1] = kp_all.getkromosomString();
                        row[2] = String.valueOf(kp_all.getjumlahKendaraan());
                        row[3] = String.valueOf(kp_all.getjumlahTerlewati());
                        row[4] = String.valueOf(kp_all.getFitness());

                        Fitness_Baru_Model.addRow(row);
                    }

                    row = new String[13];
                    DefaultTableModel Data_Tujuan_Model = (DefaultTableModel) DataTujuan.getModel();
                    for(j=0; j<dataPopulasiTujuanKendaraan.size(); j++){
                        ArrayList<ArrayList> dataTujuanKendaraan = dataPopulasiTujuanKendaraan.get(j);

                        for(k=0; k<dataTujuanKendaraan.size(); k++){
                            ArrayList<DataTujuan> dataTujuans = dataTujuanKendaraan.get(k);

                            for(l=0; l<dataTujuans.size(); l++){
                                dataTujuan = dataTujuans.get(l);

                                row[0] = "P"+String.valueOf(j+1);
                                row[1] = "K"+String.valueOf(k+1); 
                                row[2] = String.valueOf(Integer.parseInt(dataTujuan.getNode())); 
                                row[3] = dataNamaPelanggan[Integer.parseInt(dataTujuan.getNode())-1][1];
                                row[4] = dataTujuan.getWaktu();
                                row[5] = dataTujuan.getSampai();
                                row[6] = dataTujuan.getBuka();
                                row[7] = dataTujuan.getTunggu();
                                row[8] = dataTujuan.getMulai();
                                row[9] = dataTujuan.getLayanan();
                                row[10] = dataTujuan.getSelesai();
                                row[11] = dataTujuan.getTutup();
                                row[12] = dataTujuan.getPenalti();

                                Data_Tujuan_Model.addRow(row);
                            }
                        }
                    }

                    kp = gen.getKromosomTerbaik();
                    
                    gen.set_fitnessTerbaik(kp.getFitness());
                    int individu = kp.getIndividu()+1;
                    Individu_AG.setText("Individu : "+individu);
                    tampil_kromosom.setText("Kromosom : "+kp.getkromosomString());
                    fitness_AG.setText("Fitness : "+kp.getFitness());
                    terlewati_AG.setText("Terlewati : "+kp.getjumlahTerlewati());
                    kendaraan_AG.setText("Jumlah Kendaraan : "+kp.getjumlahKendaraan());
                }
                else{
                    gen.doCrossOver();
                    gen.doMutasi();
                    gen.pembagianKendaraan();
                    gen.rute_kendaraan();
                    gen.hitungFitness();
                    gen.setPopulasiKromosomBaru();
                }
            }

            long elapsedTime = System.nanoTime() - startTime;

            double elapsedTimeInSeconds = TimeUnit.MILLISECONDS.convert(elapsedTime, TimeUnit.NANOSECONDS) / 1000.0;

            gen.set_waktuKomputasi(elapsedTimeInSeconds);

            if(gen.get_jumlahDataDababaseAG() == 0){
                gen.simpan_parameterHasilAG();
            }
            else{
                gen.update_parameterHasilAG();
            }

            ExecutionTime.setText("Execution Time : "+String.valueOf(elapsedTimeInSeconds)+" detik");

            JOptionPane.showMessageDialog(null, "Proses Perhitungan VRPTV untuk algoritma Genetik Berhasil");
        }
    }//GEN-LAST:event_do_AGActionPerformed

    private void Bersih_DataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bersih_DataActionPerformed
        // TODO add your handling code here:
        int i;
        Genetika gen = new Genetika();
        gen.bersihkanData();
        
        DefaultTableModel Fitness_Seluruh = (DefaultTableModel) TabelFitnessSeluruh.getModel();
        for(i=TabelFitnessSeluruh.getRowCount()-1; i>=0; i--){
            Fitness_Seluruh.removeRow(i);
        }
        
        DefaultTableModel Fitness_Lama_Model = (DefaultTableModel) FitnessLama.getModel();
        for(i=FitnessLama.getRowCount()-1; i>=0; i--){
            Fitness_Lama_Model.removeRow(i);
        }
        
        DefaultTableModel Fitness_Baru_Model = (DefaultTableModel) FitnessBaru.getModel();
        for(i=FitnessBaru.getRowCount()-1; i>=0; i--){
            Fitness_Baru_Model.removeRow(i);
        }
        
        DefaultTableModel Data_Tujuan_Model = (DefaultTableModel) DataTujuan.getModel();
        for(i=DataTujuan.getRowCount()-1; i>=0; i--){          
            Data_Tujuan_Model.removeRow(i); 
        }
        
        Individu_AG.setText("Individu : ");
        tampil_kromosom.setText("Kromosom : ");
        fitness_AG.setText("Fitness : ");
        terlewati_AG.setText("Terlewati : ");
        kendaraan_AG.setText("Jumlah Kendaraan : ");
    }//GEN-LAST:event_Bersih_DataActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VRPTW_AG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VRPTW_AG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VRPTW_AG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VRPTW_AG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VRPTW_AG().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Bersih_Data;
    private javax.swing.JTable DataTujuan;
    private javax.swing.JLabel ExecutionTime;
    private javax.swing.JTable FitnessBaru;
    private javax.swing.JTable FitnessLama;
    private javax.swing.JTextField Generasi;
    private javax.swing.JLabel Individu_AG;
    private javax.swing.JButton Load_Data;
    private javax.swing.JTextField Mutasi;
    private javax.swing.JTable TabelFitnessSeluruh;
    private javax.swing.JTextField crossOver;
    private javax.swing.JButton do_AG;
    private javax.swing.JLabel fitness_AG;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField kapasitasAngkut;
    private javax.swing.JTextField kecKendaraan;
    private javax.swing.JLabel kendaraan_AG;
    private javax.swing.JLabel tampil_kromosom;
    private javax.swing.JLabel terlewati_AG;
    private javax.swing.JTextField ukuranPopulasi;
    // End of variables declaration//GEN-END:variables
}
